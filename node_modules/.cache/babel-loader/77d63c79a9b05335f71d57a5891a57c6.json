{"ast":null,"code":"import { FETCH_PRODUCTS, FILTER_PRODUCTS_BY_SIZE, ORDER_PRODUCTS_BY_PRICE } from \"./types\";\nexport const fetchProducts = () => dispatch => {\n  fetch(\"http://localhost:8000/products\").then(res => res.json()).catch(err => fetch(\"db.json\").then(res => res.json()).then(data => data.products)).then(data => {\n    dispatch({\n      type: FETCH_PRODUCTS,\n      payload: data\n    });\n  });\n};\nexport const filterProducts = (products, size) => dispatch => {\n  dispatch({\n    type: FILTER_PRODUCTS_BY_SIZE,\n    payload: {\n      size: size,\n      items: size === \"\" ? products : products.filter(x => x.category.indexOf(size.toUpperCase()) >= 0)\n    }\n  });\n};\nexport const sortProducts = (items, sort) => dispatch => {\n  const products = items.slice();\n\n  if (sort !== \"\") {\n    products.sort((a, b) => sort === \"lowestprice\" ? a.price > b.price ? 1 : -1 : a.price < b.price ? 1 : -1);\n  } else {\n    products.sort((a, b) => a.id > b.id ? 1 : -1);\n  }\n\n  dispatch({\n    type: ORDER_PRODUCTS_BY_PRICE,\n    payload: {\n      sort: sort,\n      items: products\n    }\n  });\n};","map":{"version":3,"sources":["/home/iassureit/Desktop/ReduxShop/src/actions/productActions.js"],"names":["FETCH_PRODUCTS","FILTER_PRODUCTS_BY_SIZE","ORDER_PRODUCTS_BY_PRICE","fetchProducts","dispatch","fetch","then","res","json","catch","err","data","products","type","payload","filterProducts","size","items","filter","x","category","indexOf","toUpperCase","sortProducts","sort","slice","a","b","price","id"],"mappings":"AAAA,SACIA,cADJ,EAEIC,uBAFJ,EAGIC,uBAHJ,QAIS,SAJT;AAME,OAAO,MAAMC,aAAa,GAAG,MAAOC,QAAD,IAAc;AAC/CC,EAAAA,KAAK,CAAC,gCAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGC,KAFH,CAEUC,GAAD,IACLL,KAAK,CAAC,SAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESK,IAAD,IAAUA,IAAI,CAACC,QAFvB,CAHJ,EAOGN,IAPH,CAOSK,IAAD,IAAU;AACdP,IAAAA,QAAQ,CAAC;AAAES,MAAAA,IAAI,EAAEb,cAAR;AAAwBc,MAAAA,OAAO,EAAEH;AAAjC,KAAD,CAAR;AACD,GATH;AAUD,CAXM;AAaP,OAAO,MAAMI,cAAc,GAAG,CAACH,QAAD,EAAWI,IAAX,KAAqBZ,QAAD,IAAc;AAC9DA,EAAAA,QAAQ,CAAC;AACPS,IAAAA,IAAI,EAAEZ,uBADC;AAEPa,IAAAA,OAAO,EAAE;AACPE,MAAAA,IAAI,EAAEA,IADC;AAEPC,MAAAA,KAAK,EACHD,IAAI,KAAK,EAAT,GACIJ,QADJ,GAEIA,QAAQ,CAACM,MAAT,CACGC,CAAD,IAAOA,CAAC,CAACC,QAAF,CAAWC,OAAX,CAAmBL,IAAI,CAACM,WAAL,EAAnB,KAA0C,CADnD;AALC;AAFF,GAAD,CAAR;AAYD,CAbM;AAeP,OAAO,MAAMC,YAAY,GAAG,CAACN,KAAD,EAAQO,IAAR,KAAkBpB,QAAD,IAAc;AACzD,QAAMQ,QAAQ,GAAGK,KAAK,CAACQ,KAAN,EAAjB;;AACA,MAAID,IAAI,KAAK,EAAb,EAAiB;AACfZ,IAAAA,QAAQ,CAACY,IAAT,CAAc,CAACE,CAAD,EAAIC,CAAJ,KACZH,IAAI,KAAK,aAAT,GACIE,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GACE,CADF,GAEE,CAAC,CAHP,GAIIF,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GACA,CADA,GAEA,CAAC,CAPP;AASD,GAVD,MAUO;AACLhB,IAAAA,QAAQ,CAACY,IAAT,CAAc,CAACE,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACG,EAAF,GAAOF,CAAC,CAACE,EAAT,GAAc,CAAd,GAAkB,CAAC,CAA5C;AACD;;AACDzB,EAAAA,QAAQ,CAAC;AACPS,IAAAA,IAAI,EAAEX,uBADC;AAEPY,IAAAA,OAAO,EAAE;AACPU,MAAAA,IAAI,EAAEA,IADC;AAEPP,MAAAA,KAAK,EAAEL;AAFA;AAFF,GAAD,CAAR;AAOD,CAtBM","sourcesContent":["import {\n    FETCH_PRODUCTS,\n    FILTER_PRODUCTS_BY_SIZE,\n    ORDER_PRODUCTS_BY_PRICE,\n  } from \"./types\";\n  \n  export const fetchProducts = () => (dispatch) => {\n    fetch(\"http://localhost:8000/products\")\n      .then((res) => res.json())\n      .catch((err) =>\n        fetch(\"db.json\")\n          .then((res) => res.json())\n          .then((data) => data.products)\n      )\n      .then((data) => {\n        dispatch({ type: FETCH_PRODUCTS, payload: data });\n      });\n  };\n  \n  export const filterProducts = (products, size) => (dispatch) => {\n    dispatch({\n      type: FILTER_PRODUCTS_BY_SIZE,\n      payload: {\n        size: size,\n        items:\n          size === \"\"\n            ? products\n            : products.filter(\n                (x) => x.category.indexOf(size.toUpperCase()) >= 0\n              ),\n      },\n    });\n  };\n  \n  export const sortProducts = (items, sort) => (dispatch) => {\n    const products = items.slice();\n    if (sort !== \"\") {\n      products.sort((a, b) =>\n        sort === \"lowestprice\"\n          ? a.price > b.price\n            ? 1\n            : -1\n          : a.price < b.price\n          ? 1\n          : -1\n      );\n    } else {\n      products.sort((a, b) => (a.id > b.id ? 1 : -1));\n    }\n    dispatch({\n      type: ORDER_PRODUCTS_BY_PRICE,\n      payload: {\n        sort: sort,\n        items: products,\n      },\n    });\n  };"]},"metadata":{},"sourceType":"module"}