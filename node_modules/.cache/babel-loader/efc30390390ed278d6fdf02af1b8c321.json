{"ast":null,"code":"import _objectSpread from\"/home/iassureit/Desktop/ReduxShop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ADD_TO_CART,REMOVE_FROM_CART}from\"./types\";export var addToCart=function addToCart(items,product){return function(dispatch){var cartItems=items.slice();var productAlreadyInCart=false;cartItems.forEach(function(cp){if(cp.id===product.id){cp.count+=1;productAlreadyInCart=true;}});if(!productAlreadyInCart){cartItems.push(_objectSpread(_objectSpread({},product),{},{count:1}));}localStorage.setItem(\"cartItems\",JSON.stringify(cartItems));dispatch({type:ADD_TO_CART,payload:{cartItems:cartItems}});};};export var removeFromCart=function removeFromCart(items,product){return function(dispatch){var cartItems=items.slice().filter(function(a){return a.id!==product.id;});localStorage.setItem(\"cartItems\",JSON.stringify(cartItems));dispatch({type:REMOVE_FROM_CART,payload:{cartItems:cartItems}});};};","map":{"version":3,"sources":["/home/iassureit/Desktop/ReduxShop/src/actions/cartActions.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","addToCart","items","product","dispatch","cartItems","slice","productAlreadyInCart","forEach","cp","id","count","push","localStorage","setItem","JSON","stringify","type","payload","removeFromCart","filter","a"],"mappings":"uJAAA,OAASA,WAAT,CAAsBC,gBAAtB,KAA8C,SAA9C,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAQC,OAAR,QAAoB,UAACC,QAAD,CAAc,CACzD,GAAMC,CAAAA,SAAS,CAAGH,KAAK,CAACI,KAAN,EAAlB,CACA,GAAIC,CAAAA,oBAAoB,CAAG,KAA3B,CAEAF,SAAS,CAACG,OAAV,CAAkB,SAACC,EAAD,CAAQ,CACxB,GAAIA,EAAE,CAACC,EAAH,GAAUP,OAAO,CAACO,EAAtB,CAA0B,CACxBD,EAAE,CAACE,KAAH,EAAY,CAAZ,CACAJ,oBAAoB,CAAG,IAAvB,CACD,CACF,CALD,EAOA,GAAI,CAACA,oBAAL,CAA2B,CACzBF,SAAS,CAACO,IAAV,gCAAoBT,OAApB,MAA6BQ,KAAK,CAAE,CAApC,IACD,CACDE,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkCC,IAAI,CAACC,SAAL,CAAeX,SAAf,CAAlC,EACAD,QAAQ,CAAC,CAAEa,IAAI,CAAElB,WAAR,CAAqBmB,OAAO,CAAE,CAAEb,SAAS,CAATA,SAAF,CAA9B,CAAD,CAAR,CACD,CAhBwB,EAAlB,CAkBP,MAAO,IAAMc,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACjB,KAAD,CAAQC,OAAR,QAAoB,UAACC,QAAD,CAAc,CAC9D,GAAMC,CAAAA,SAAS,CAAGH,KAAK,CAACI,KAAN,GAAcc,MAAd,CAAqB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACX,EAAF,GAASP,OAAO,CAACO,EAAxB,EAArB,CAAlB,CACAG,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkCC,IAAI,CAACC,SAAL,CAAeX,SAAf,CAAlC,EACAD,QAAQ,CAAC,CAAEa,IAAI,CAAEjB,gBAAR,CAA0BkB,OAAO,CAAE,CAAEb,SAAS,CAATA,SAAF,CAAnC,CAAD,CAAR,CACD,CAJ6B,EAAvB","sourcesContent":["import { ADD_TO_CART, REMOVE_FROM_CART } from \"./types\";\n\nexport const addToCart = (items, product) => (dispatch) => {\n  const cartItems = items.slice();\n  let productAlreadyInCart = false;\n\n  cartItems.forEach((cp) => {\n    if (cp.id === product.id) {\n      cp.count += 1;\n      productAlreadyInCart = true;\n    }\n  });\n\n  if (!productAlreadyInCart) {\n    cartItems.push({ ...product, count: 1 });\n  }\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  dispatch({ type: ADD_TO_CART, payload: { cartItems } });\n};\n\nexport const removeFromCart = (items, product) => (dispatch) => {\n  const cartItems = items.slice().filter((a) => a.id !== product.id);\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  dispatch({ type: REMOVE_FROM_CART, payload: { cartItems } });\n};"]},"metadata":{},"sourceType":"module"}